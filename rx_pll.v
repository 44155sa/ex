/************************************************************\
 **  Copyright (c) 2012-2025 Anlogic Inc.
 **  All Right Reserved.\
\************************************************************/
/************************************************************\
 ** Log	:	This file is generated by Anlogic IP Generator.
 ** File	:	C:/17ahc/Project/prj/al_ip/rx_pll.v
 ** Date	:	2025 10 26
 ** TD version	:	6.2.168116
************************************************************/

///////////////////////////////////////////////////////////////////////////////
//	Input frequency:                125.000000MHz
//	Clock multiplication factor: 1
//	Clock division factor:       1
//	Clock information:
//		Clock name	| Frequency 	| Phase shift
//		C0        	| 125.000000MHZ	| 0.0000  DEG  
//		C1        	| 125.000000MHZ	| 0.0000  DEG  
//		C2        	| 250.000000MHZ	| 0.0000  DEG  
//		C3        	| 125.000000MHZ	| 0.0000  DEG  
///////////////////////////////////////////////////////////////////////////////
`timescale 1 ns / 100 fs

module rx_pll (
  refclk,
  reset,
  clk0_out,
  clk1_out,
  clk2_out,
  clk3_out 
);

  input refclk;
  input reset;
  output clk0_out;
  output clk1_out;
  output clk2_out;
  output clk3_out;

  wire clk0_buf;

  EG_LOGIC_BUFG bufg_feedback (
    .i(clk0_buf),
    .o(clk0_out) 
  );

  EG_PHY_PLL #(
    .DPHASE_SOURCE("DISABLE"),
    .DYNCFG("DISABLE"),
    .FIN("125.000000"),
    .FEEDBK_MODE("NORMAL"),
    .FEEDBK_PATH("CLKC0_EXT"),
    .STDBY_ENABLE("DISABLE"),
    .PLLRST_ENA("ENABLE"),
    .SYNC_ENABLE("DISABLE"),
    .GMC_GAIN(6),
    .GMC_TEST(15),
    .ICP_CURRENT(29),
    .KVCO(4),
    .LPF_CAPACITOR(1),
    .LPF_RESISTOR(1),
    .REFCLK_DIV(1),
    .FBCLK_DIV(1),
    .CLKC0_ENABLE("ENABLE"),
    .CLKC0_DIV(8),
    .CLKC0_CPHASE(7),
    .CLKC0_FPHASE(0),
    .CLKC1_ENABLE("ENABLE"),
    .CLKC1_DIV(8),
    .CLKC1_CPHASE(7),
    .CLKC1_FPHASE(0),
    .CLKC2_ENABLE("ENABLE"),
    .CLKC2_DIV(4),
    .CLKC2_CPHASE(3),
    .CLKC2_FPHASE(0),
    .CLKC3_ENABLE("ENABLE"),
    .CLKC3_DIV(8),
    .CLKC3_CPHASE(7),
    .CLKC3_FPHASE(0) 
  ) pll_inst (
    .refclk(refclk),
    .reset(reset),
    .stdby(1'b0),
    .extlock(rx_pll_open0),
    .load_reg(1'b0),
    .psclk(1'b0),
    .psdown(1'b0),
    .psstep(1'b0),
    .psclksel(3'b000),
    .psdone(rx_pll_open1),
    .dclk(1'b0),
    .dcs(1'b0),
    .dwe(1'b0),
    .di(8'b00000000),
    .daddr(6'b000000),
    .do({rx_pll_open9, rx_pll_open8, rx_pll_open7, rx_pll_open6, rx_pll_open5, rx_pll_open4, rx_pll_open3, rx_pll_open2}),
    .fbclk(clk0_out),
    .clkc({rx_pll_open10, clk3_out, clk2_out, clk1_out, clk0_buf}) 
  );

endmodule

